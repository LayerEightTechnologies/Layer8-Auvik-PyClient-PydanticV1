# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.tenants_detail_read_single import TenantsDetailReadSingle  # noqa: E501

class TestTenantsDetailReadSingle(unittest.TestCase):
    """TenantsDetailReadSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TenantsDetailReadSingle:
        """Test TenantsDetailReadSingle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TenantsDetailReadSingle`
        """
        model = TenantsDetailReadSingle()  # noqa: E501
        if include_optional:
            return TenantsDetailReadSingle(
                data = layer8_auvik_api_client.models.tenant_detail_resource_object.tenantDetailResourceObject(
                    type = 'tenants', 
                    id = '0987654321', 
                    attributes = layer8_auvik_api_client.models.tenant_detail_attributes.tenantDetailAttributes(
                        domain_prefix = 'sampledomain', 
                        display_name = 'Example Company Inc.', 
                        tenant_type = 'corporateIt', 
                        enabled = True, 
                        subscribed = True, 
                        subscription_owner = 'None', 
                        running = True, 
                        trial_start_date = '2017-01-01T12:00:00.000-0500', 
                        trial_end_date = '2017-01-01T12:00:00.000-0500', 
                        address = layer8_auvik_api_client.models.tenant_detail_attributes_address.tenantDetailAttributes_address(
                            address1 = '123 Some St.', 
                            address2 = 'Suite 321', 
                            city = 'Waterloo', 
                            state/province = 'Ontario', 
                            zip/postal_code = 'N1A 2B3', 
                            state = 'Ontario', 
                            postal_code = 'N1A 2B3', 
                            country = 'Canada', ), ), 
                    relationships = layer8_auvik_api_client.models.tenant_detail_resource_object_relationships.tenantDetailResourceObject_relationships(
                        parent = layer8_auvik_api_client.models.tenant_detail_resource_object_relationships_parent.tenantDetailResourceObject_relationships_parent(
                            data = layer8_auvik_api_client.models.tenant_detail_resource_object_relationships_parent_data.tenantDetailResourceObject_relationships_parent_data(
                                type = 'tenants', 
                                id = '0192837465', ), ), 
                        authorizations = layer8_auvik_api_client.models.tenant_detail_resource_object_relationships_authorizations.tenantDetailResourceObject_relationships_authorizations(), ), )
            )
        else:
            return TenantsDetailReadSingle(
        )
        """

    def testTenantsDetailReadSingle(self):
        """Test TenantsDetailReadSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
