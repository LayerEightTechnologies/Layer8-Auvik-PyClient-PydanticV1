# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.entity_audit_read_single import EntityAuditReadSingle  # noqa: E501

class TestEntityAuditReadSingle(unittest.TestCase):
    """EntityAuditReadSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityAuditReadSingle:
        """Test EntityAuditReadSingle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityAuditReadSingle`
        """
        model = EntityAuditReadSingle()  # noqa: E501
        if include_optional:
            return EntityAuditReadSingle(
                data = layer8_auvik_api_client.models.audits_resource_object.auditsResourceObject(
                    type = 'entityAudit', 
                    id = 'MTk5NTAyNzg2ODc3MDYzMTY5LDE5OTUwMjc5MTExMjc4NTkyMw', 
                    attributes = layer8_auvik_api_client.models.audit_attributes.auditAttributes(
                        user = 'John Smith', 
                        category = 'unknown', 
                        action = 'create', 
                        direction = 'inbound', 
                        status = 'created', 
                        cause = 'This is an error.', 
                        data = 'This is some message or data related to this action', 
                        date_started = '2018-03-13T12:00:00.000Z', 
                        last_active = '2018-03-12T12:00:00.000Z', ), 
                    relationships = layer8_auvik_api_client.models.audit_relationships.auditRelationships(
                        tenant = layer8_auvik_api_client.models.tenant.tenant(
                            data = layer8_auvik_api_client.models.tenant_data.tenant_data(
                                type = 'tenant', 
                                id = '195798545063742726', ), ), 
                        device = layer8_auvik_api_client.models.audit_relationships_device.auditRelationships_device(), ), 
                    links = layer8_auvik_api_client.models.audits_resource_object_links.auditsResourceObject_links(
                        self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/entity/audit/MTk5NTAyNzg2ODc3MDYzMTY5LDE5OTUwMjc5MTExMjc4NTkyMw', ), )
            )
        else:
            return EntityAuditReadSingle(
        )
        """

    def testEntityAuditReadSingle(self):
        """Test EntityAuditReadSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
