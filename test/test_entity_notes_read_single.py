# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.entity_notes_read_single import EntityNotesReadSingle  # noqa: E501

class TestEntityNotesReadSingle(unittest.TestCase):
    """EntityNotesReadSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityNotesReadSingle:
        """Test EntityNotesReadSingle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityNotesReadSingle`
        """
        model = EntityNotesReadSingle()  # noqa: E501
        if include_optional:
            return EntityNotesReadSingle(
                data = layer8_auvik_api_client.models.note_resource_object.noteResourceObject(
                    type = 'entityNote', 
                    id = 'MTg2OTI2NTY1MDQ3MDExMDc0LDE5Nzc2OTU1ODM1MTAyMTMxOA', 
                    attributes = layer8_auvik_api_client.models.note_attributes.noteAttributes(
                        title = 'SomeNoteTitle', 
                        body = 'This is a note about one of my networks.', 
                        entity_id = 'MTk5NTAyNzg2ODc3MDYzMTY5LDE5OTUwMjc5MTExMjc4NTkyMw', 
                        entity_type = 'network', 
                        entity_name = '192.168.4.0/24', 
                        last_modified_by = 'John User', 
                        last_modified = '2018-03-12T12:00:00.000Z', ), 
                    relationships = layer8_auvik_api_client.models.note_relationships.noteRelationships(
                        tenant = layer8_auvik_api_client.models.tenant.tenant(
                            data = layer8_auvik_api_client.models.tenant_data.tenant_data(
                                type = 'tenant', 
                                id = '195798545063742726', ), ), ), 
                    links = layer8_auvik_api_client.models.note_resource_object_links.noteResourceObject_links(
                        self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/entity/note/MTg2OTI2NTY1MDQ3MDExMDc0LDE5Nzc2OTU1ODM1MTAyMTMxOA', ), )
            )
        else:
            return EntityNotesReadSingle(
        )
        """

    def testEntityNotesReadSingle(self):
        """Test EntityNotesReadSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
