# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.device_details_relationships import DeviceDetailsRelationships  # noqa: E501

class TestDeviceDetailsRelationships(unittest.TestCase):
    """DeviceDetailsRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceDetailsRelationships:
        """Test DeviceDetailsRelationships
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceDetailsRelationships`
        """
        model = DeviceDetailsRelationships()  # noqa: E501
        if include_optional:
            return DeviceDetailsRelationships(
                tenant = layer8_auvik_api_client.models.tenant.tenant(
                    data = layer8_auvik_api_client.models.tenant_data.tenant_data(
                        type = 'tenant', 
                        id = '195798545063742726', 
                        attributes = layer8_auvik_api_client.models.tenant_data_attributes.tenant_data_attributes(
                            domain_prefix = 'sampledomain', ), ), ),
                connected_devices = layer8_auvik_api_client.models.device_details_relationships_connected_devices.deviceDetailsRelationships_connectedDevices(
                    data = [
                        layer8_auvik_api_client.models.device_details_relationships_connected_devices_data.deviceDetailsRelationships_connectedDevices_data(
                            id = 'MTk5NzYyMjM1MDE1MTY4MDA0LDE5OTc2MjQ4MzgzMjYxMjM1NQ', 
                            attributes = layer8_auvik_api_client.models.device_details_relationships_connected_devices_attributes.deviceDetailsRelationships_connectedDevices_attributes(
                                device_name = 'SomeOtherDevice', ), 
                            type = 'device', 
                            links = layer8_auvik_api_client.models.device_details_relationships_connected_devices_links.deviceDetailsRelationships_connectedDevices_links(
                                dashboard = 'https://sampledomain.my.auvik.com/#entity/device/199502791112785923/dashboard', 
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/device/info/MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', ), )
                        ], ),
                interfaces = layer8_auvik_api_client.models.device_details_relationships_interfaces.deviceDetailsRelationships_interfaces(
                    data = [
                        layer8_auvik_api_client.models.device_details_relationships_interfaces_data.deviceDetailsRelationships_interfaces_data(
                            type = 'interface', 
                            id = 'MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', 
                            attributes = layer8_auvik_api_client.models.device_details_relationships_interfaces_attributes.deviceDetailsRelationships_interfaces_attributes(
                                interface_name = 'Interface 1', 
                                mac_address = '10:dd:b1:cb:ab:c6', ), 
                            links = layer8_auvik_api_client.models.device_details_relationships_interfaces_links.deviceDetailsRelationships_interfaces_links(
                                dashboard = 'https://sampledomain.my.auvik.com/#entity/interface/199502791112785923/dashboard', 
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/interface/info/MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', ), )
                        ], ),
                configurations = layer8_auvik_api_client.models.device_details_relationships_configurations.deviceDetailsRelationships_configurations(
                    data = [
                        layer8_auvik_api_client.models.device_details_relationships_configurations_data.deviceDetailsRelationships_configurations_data(
                            type = 'configuration', 
                            id = 'MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', 
                            attributes = layer8_auvik_api_client.models.device_details_relationships_configurations_attributes.deviceDetailsRelationships_configurations_attributes(
                                is_running = True, 
                                backup_time = '2018-03-12T12:00:00.000Z', ), 
                            links = layer8_auvik_api_client.models.device_details_relationships_configurations_links.deviceDetailsRelationships_configurations_links(
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/configuration/MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', ), )
                        ], ),
                components = layer8_auvik_api_client.models.device_details_relationships_components.deviceDetailsRelationships_components(
                    data = [
                        layer8_auvik_api_client.models.device_details_relationships_components_data.deviceDetailsRelationships_components_data(
                            type = 'component', 
                            id = 'MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', 
                            attributes = layer8_auvik_api_client.models.device_details_relationships_components_attributes.deviceDetailsRelationships_components_attributes(
                                configuration_id = '', 
                                configuration_index = '', 
                                component_name = 'CPU Core 26', 
                                component_type = 'cpu', ), 
                            links = layer8_auvik_api_client.models.device_details_relationships_components_links.deviceDetailsRelationships_components_links(
                                dashboard = 'https://sampledomain.my.auvik.com/#entity/device/197769558351021318/cpu', 
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/components/MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMjg5NjAwMw', ), )
                        ], )
            )
        else:
            return DeviceDetailsRelationships(
        )
        """

    def testDeviceDetailsRelationships(self):
        """Test DeviceDetailsRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
