# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.interface_relationships import InterfaceRelationships  # noqa: E501

class TestInterfaceRelationships(unittest.TestCase):
    """InterfaceRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InterfaceRelationships:
        """Test InterfaceRelationships
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InterfaceRelationships`
        """
        model = InterfaceRelationships()  # noqa: E501
        if include_optional:
            return InterfaceRelationships(
                tenant = layer8_auvik_api_client.models.tenant.tenant(
                    data = layer8_auvik_api_client.models.tenant_data.tenant_data(
                        type = 'tenant', 
                        id = '195798545063742726', 
                        attributes = layer8_auvik_api_client.models.tenant_data_attributes.tenant_data_attributes(
                            domain_prefix = 'sampledomain', ), ), ),
                connected_to = layer8_auvik_api_client.models.interface_relationships_connected_to.interfaceRelationships_connectedTo(
                    data = [
                        layer8_auvik_api_client.models.interface_relationships_connected_to_data.interfaceRelationships_connectedTo_data(
                            id = 'MTk5NTAyNzg2ODc3MDYzNjgxLDE5OTUwMzc3Nzk1Njg4ODgzNQ', 
                            type = 'interface', 
                            links = layer8_auvik_api_client.models.interface_relationships_connected_to_links.interfaceRelationships_connectedTo_links(
                                dashboard = 'https://sampledomain.my.auvik.com/#entity/interface/199502791112896003/dashboard', 
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/interface/info/MTk5NTAyNzg2ODc3MDYzNjgxLDE5OTUwMzc3Nzk1Njg4ODgzNQ', ), )
                        ], ),
                networks = layer8_auvik_api_client.models.interface_relationships_networks.interfaceRelationships_networks(
                    data = [
                        layer8_auvik_api_client.models.interface_relationships_networks_data.interfaceRelationships_networks_data(
                            type = 'network', 
                            id = 'MTk5NTAyNzg2ODc3MDYzMTY5LDE5OTUwMjc5MTExMjc4NTkyMw', 
                            attributes = layer8_auvik_api_client.models.device_relationships_networks_attributes.deviceRelationships_networks_attributes(
                                network_name = '192.168.4.0/24', ), 
                            links = layer8_auvik_api_client.models.interface_relationships_networks_links.interfaceRelationships_networks_links(
                                dashboard = 'https://sampledomain.my.auvik.com/#entity/network/199502791112896003/dashboard', 
                                self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/network/info/MTk5NTAyNzg2ODc3MDYzMTY5LDE5OTUwMjc5MTExMjc4NTkyMw', ), )
                        ], ),
                parent_device = layer8_auvik_api_client.models.interface_relationships_parent_device.interfaceRelationships_parentDevice(
                    data = layer8_auvik_api_client.models.interface_relationships_parent_device_data.interfaceRelationships_parentDevice_data(
                        id = 'MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMzAyODg2Nw', 
                        type = 'device', 
                        links = layer8_auvik_api_client.models.interface_relationships_parent_device_data_links.interfaceRelationships_parentDevice_data_links(
                            dashboard = 'https://sampledomain.my.auvik.com/#entity/device/199502791112896003/dashboard', 
                            self = 'https://auvikapi.us1.my.auvik.com/v1/inventory/device/info/MTk5NTAyNzg2ODc3MDYzNDI1LDE5OTUwMjc5MTExMzAyODg2Nw', ), ), )
            )
        else:
            return InterfaceRelationships(
        )
        """

    def testInterfaceRelationships(self):
        """Test InterfaceRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
