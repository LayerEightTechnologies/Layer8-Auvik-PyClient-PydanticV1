# coding: utf-8

"""
    Auvik API

    To use the Auvik APIs, you’ll need a <a href=\"https://support.auvik.com/hc/en-us/articles/204309114-#topic_generate\" target=\"_blank\">valid Auvik user and the user’s API key</a>. The user must also have the correct <a href=\" https://support.auvik.com/hc/en-us/articles/115002815966\" target=\"_blank\">role permissions</a>.<br>     <br>     Note: The word <i>tenant</i> as it appears in the API descriptions means one of Auvik’s supported tenant types: multi-client or client.<br><br>All date formats are formatted in the format of YYYY-MM-DDTHH:MM:SS.sssZ, as describe in ISO 8061<br><br>To find out more about Auvik’s APIs, <a href=\"https://support.auvik.com/hc/en-us/articles/360017965092\" target=\"_blank\">click here.</a>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from layer8_auvik_api_client.models.stack_all_of_relationships_all_of_members_inner_attributes import StackAllOfRelationshipsAllOfMembersInnerAttributes  # noqa: E501

class TestStackAllOfRelationshipsAllOfMembersInnerAttributes(unittest.TestCase):
    """StackAllOfRelationshipsAllOfMembersInnerAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StackAllOfRelationshipsAllOfMembersInnerAttributes:
        """Test StackAllOfRelationshipsAllOfMembersInnerAttributes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StackAllOfRelationshipsAllOfMembersInnerAttributes`
        """
        model = StackAllOfRelationshipsAllOfMembersInnerAttributes()  # noqa: E501
        if include_optional:
            return StackAllOfRelationshipsAllOfMembersInnerAttributes(
                member_name = 'Stack Member 3',
                make_model = 'Extreme Summit X250-48p',
                member_number = '3',
                member_role = 'member',
                member_status = 'waiting',
                mac_address = '1A:2B:3C:4D:5E:6F',
                software_priority = '1',
                hardware_priority = '1',
                serial_number = '123456789',
                software_revision = '1.4.5.02'
            )
        else:
            return StackAllOfRelationshipsAllOfMembersInnerAttributes(
                member_name = 'Stack Member 3',
                make_model = 'Extreme Summit X250-48p',
                member_number = '3',
                member_role = 'member',
                member_status = 'waiting',
                mac_address = '1A:2B:3C:4D:5E:6F',
                software_priority = '1',
                hardware_priority = '1',
                serial_number = '123456789',
                software_revision = '1.4.5.02',
        )
        """

    def testStackAllOfRelationshipsAllOfMembersInnerAttributes(self):
        """Test StackAllOfRelationshipsAllOfMembersInnerAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
